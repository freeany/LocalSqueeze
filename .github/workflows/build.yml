name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run make
        
      - name: Build (macOS Intel)
        if: matrix.os == 'macos-latest' && matrix.arch == 'x64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_target_arch: x64
        run: npm run make
        
      - name: Build (macOS Apple Silicon)
        if: matrix.os == 'macos-latest' && matrix.arch == 'arm64'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_target_arch: arm64
        run: npm run make
        
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}${{ matrix.arch && format('-{0}', matrix.arch) || '' }}
          path: out/make/
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    
    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-win32
          path: ./artifacts/win32/
          
      - name: Download macOS Intel Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-darwin-x64
          path: ./artifacts/darwin-x64/
          
      - name: Download macOS Apple Silicon Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-darwin-arm64
          path: ./artifacts/darwin-arm64/
          
      - name: Debug artifacts information
        run: |
          echo "=== Detailed Artifacts Debug Information ==="
          echo "Current working directory: $(pwd)"
          echo "Available disk space:"
          df -h .
          echo ""
          echo "=== Directory Structure ==="
          find ./artifacts -type d | sort
          echo ""
          echo "=== All Files with Details ==="
          find ./artifacts -type f -exec ls -lah {} \; | head -30
          echo ""
          echo "=== File Count by Type ==="
          find ./artifacts -type f -name "*.exe" | wc -l | xargs echo "EXE files:"
          find ./artifacts -type f -name "*.msi" | wc -l | xargs echo "MSI files:"
          find ./artifacts -type f -name "*.dmg" | wc -l | xargs echo "DMG files:"
          find ./artifacts -type f -name "*.zip" | wc -l | xargs echo "ZIP files:"
          find ./artifacts -type f -name "*.app" | wc -l | xargs echo "APP files:"
          echo ""
          echo "=== File Paths for Release ==="
          find ./artifacts -type f \( -name "*.exe" -o -name "*.msi" -o -name "*.dmg" -o -name "*.zip" \) | sort
          echo ""
          echo "=== File Checksums ==="
          find ./artifacts -type f \( -name "*.exe" -o -name "*.msi" -o -name "*.dmg" -o -name "*.zip" \) -exec sha256sum {} \;
          
      - name: Pre-release file validation
        run: |
          echo "=== Pre-Release Validation ==="
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub ref name: ${{ github.ref_name }}"
          echo "GitHub ref type: ${{ github.ref_type }}"
          echo "Repository: ${{ github.repository }}"
          echo ""
          echo "=== Files to be uploaded ==="
          for pattern in "./artifacts/win32/**/*" "./artifacts/darwin-x64/**/*" "./artifacts/darwin-arm64/**/*"; do
            echo "Pattern: $pattern"
            find ./artifacts -path "${pattern#./artifacts/}" -type f 2>/dev/null || echo "No files found for pattern: $pattern"
          done
          echo ""
          echo "=== Final file list ==="
          find ./artifacts -type f | while read file; do
            echo "File: $file ($(stat -c%s "$file" 2>/dev/null || stat -f%z "$file") bytes)"
          done
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
          files: |
            ./artifacts/win32/**/*
            ./artifacts/darwin-x64/**/*
            ./artifacts/darwin-arm64/**/*